{
    "diagnostic.refreshOnInsertMode": true,
    "colors.filetypes": ["*"],
    "semanticTokens.filetypes": ["*"],
    "languageserver": {
        "ccls": {
            "command": "ccls",
            "filetypes": [
                "c",
                "cpp",
                "objc",
                "objcpp"
            ],
            "trace.server": "verbose",
            "rootPatterns": [
                ".ccls",
                "compile_commands.json",
                ".vim/",
                ".git/",
                ".hg/"
            ],
            "initializationOptions": {
                "resourceDir": "/usr/lib/clang/14.0.6/",
                "cache": {
                    "directory": "/tmp/ccls"
                },
                "highlight": { 
                    "lsRanges" : true 
                },
                "clang": {
                    "extraArgs": [ "-std=c++20" ]
                }
            },
            "args": ["-v=2"],
            "enable": false
        },
        "eslint": {
            "command": "eslint",
            "filetypes": [
                "js"
            ],
            "rootPatterns": [
                ".vim/",
                ".git/",
                ".hg/"
            ],
            "initializationOptions": {
                "cache": {
                    "directory": "/tmp/eslint"
                }
            }
        },
        "haskell": {
          "command": "haskell-language-server-wrapper",
          "args": [
            "--lsp"
          ],
          "rootPatterns": [
            ".stack.yaml",
            ".hie-bios",
            "BUILD.bazel",
            "cabal.config",
            "package.yaml"
          ],
          "filetypes": [
            "hs",
            "lhs",
            "haskell"
          ]
        }
      },
    "clangd.fallbackFlags": [ "-std=c++2b", "-stdlib=libstdc++" ],
    "clangd.trace.server": "verbose",
    "cSpell.userWords": [
      "klog"
    ],
    "highlight.colorNames.enable": false,
    "coc.preferences.jumpCommand": "split"
}
